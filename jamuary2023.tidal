-- jamuary 2023
-- one piece of music per day
-- https://soundcloud.com/objet/sets/jamuary-2023
-- made with tidalcycles (https://tidalcycles.org/)
------------------
-- 1 - stereopond
------------------

do
  -- first mvt -> second mvt -> third mvt -> fourth mvt -> first mvt
  setcps (130/60/4)
  resetCycles
  -- mix automation
  let mix1 = mask "<t!8 t!8 t!8 t!8 f!8 f!8 f!8 f!8 t!8 t!8 f!8>"
      mix2 = mask "<f!8 f!8 t!8 t!8 t!8 t!8 f!8 f!8 f!8 f!8 f!8>"
      mix3 = mask "<f!8 f!8 f!8 f!8 t!8 t!8 t!8 t!8 f!8 f!8 f!8>"
      mix4 = mask "<f!8 f!8 f!8 f!8 f!8 f!8 t!8 t!8 t!8 t!6 f!8>"
  -- first movement
  d1
    $ mix1
    $ every 9 roll $ every 7 (#lpf 3000) $ every 10 (# s "ml:2") $ every 24 (jux (# speed 2)) $ every 6 (# room "0 0 0 0 0 0 0.2 0.4") $ every 12 (# speed "2 1 2 -2") $ every 8 (# speed "1 1 1 2") $ splice 8 "0 [1 1] 5 [0 4] <2 7> [5 6] 6 [7 6]" $ s "ml:0" # gain 1.3 # cut 1
  -- second movement
  d2
    $ mix2
    $ every 10 rolll $ every 24 (# cut 1) $ every 9 (#hpf 3000) $ every 10 (# s "ml:0") $ every 12 (off 0.25 (# room 0.1)) $ every 4 (off 0.125 (# speed "2 2 2 4")) $ every 31 (# gain 0.1) $ splice 6 "[0 0?] 1 [3 3?] 3 " $ s "ml:1" # speed "0.5 1 0.5 1 1 1" # gain 1.1 # cut 2
  -- third movement
  d3
    $ mix3
    $ every 12 rol $ every 32 (# cut 2) $ every 4 (# gain "1.5 0 0 1.4 0 0 1.3 0") $ every 3 (# lpf (9000 * saw)) $ splice 8 "0 1 2 3 4 5 6 7" $ s "ml:2" # gain 1.2 # resonance 0.3 # cut 3
  -- fourth movement
  d4
    $ mix4
    $ every 3 (# cut 1) $ every 13 roll $ every 30 (jux rev) $ every 8 (off "0.125 0.25" (# speed 3)) $ splice 8 "0 <6 ~> 0 4 0 2 0 ~" $ s "ml:3" # speed 0.5 # gain 1.3 # legato  "0.2 0.4 0.6 1" # room "0.5 0.3 0.1 0" # hpf 1000

-------------------
-- 2 - Aluminium --
-------------------

do
    setcps (120/120/2)
    resetCycles
    d1 -- treble presence
        $ dg (slow 4 "<0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9>")
        $ stut' 4 0.125 ((# n "5").(# legato 1). (# speed 2))
        $ slow 2
        $ foldEvery [3, 5, 7] (off 0.25 (# crush 2))
        $ foldEvery [2, 6, 8] (off 0.125 (+ "12"))
        $ n (scale "minor" $ "c(3,8) a(3,8,2) f(3,8) e(3,8,4)")
        # sound "op:6"
        # legato "1 2 4"
        # gain 0.3
    d2 -- rythm
        $ every 14 (jux press.(# lpf "5000 3000 2000 500"))
        $ mask (slow 16 $ "f!4 t!5")
        $ off 0.125 (# gain 0.8).(# crush 3).(# pan 0.3)
        $ s "ak . ~ ak:1 . ~ ak:2 . ak:3 ak:3 <ak:4 ~>"
        # gain 0.9
        # lpf (slow 11 $ sine*5000)
    d3 -- floating melody 1
        $ every 4 (# vowel "a e u i o")
        $ mask (slow 34 $ "f!2 t!16")
        $ up (scale "minor" $ "c(3,8) a(3,8,2)")
        # s "op:1(3,8)"
        # gain (1.2 * (slow 16 $ sine))
        # room 0.5 # orbit 3
        # pan 0.2
    d4 -- floating melody 2
        $ jux (iter 4)
        $ mask (slow 38 $ "f!3 t!18")
        $ up (scale "minor" $ "f(3,8) e(3,8,4)")
        # s "op:1(3,8)"
        # gain (1.2 * (slow 16 $ (1 - sine)))
        # room 0.7 # orbit 4
        # pan 0.8
    d5 -- hh
        $ every 19 roll
        $ every 9 (off 0.125 rev)
        $ chop 8
        $ mask (slow 18 $ "f!2 t!4")
        $ every 3 (stut' 4 0.125 (# speed "1 2 4"))
        $ slow "8 4 2 1"
        $ ply "<1 1 1 2>"
        $ off "<0.125 0.25>" (# speed 2)
        $ s "ah*4"
        # gain 0.6
        # hpf (slow 11 $ cosine*3000)

-------------------
-- 3 - Ã©tude #1 -
-------------------
setcps (110/240)

d1 $ sound "pluck:3(5,12)" # cps 0.6 # octer (slow 23 sine) # shape 0.4 # pan 0.5

d2 $ sound "pluck:6(4,12)" # pan 0.4 # octer (slow 17 sine) # shape 0.4 # pan 0

d3 $ sound "drum:8(7,12)" # pan 0.6 # octer (slow 27 sine) # shape 0.4 # pan 1 # room 0.1

d5 $ s "bskick:1(3,8)" # octer (slow 11 sine) # shape 0.4 # pan 0

xfadeIn 1 16 $ sound "pluck:4(9,12)" # pan 1

xfadeIn 2 16 $ sound "pluck:7(10,12)" # pan 0

xfadeIn 3 16 $ sound "drum:9(11,12)" # pan 1

xfadeIn 1 16 $ sound "pluck:5(9,16)" # pan 0

xfadeIn 2 16 $ sound "pluck:8(10,16)" # pan 1

xfadeIn 3 16 $ sound "drum:9(7,16)" # room 0.8

hush

-------------------
-- 4 - euclid -----
-------------------
do
resetCycles
d1 -- drums
    $ mask "<t!32 f!33>"
    $ every 19 roll
    $ mask "<t!15 f>"
    $ sometimes (# crush 4)
    $ every 9 (off (2/8) (hurry 2))
    $ s "ak(<5 3 7>,8,<0 4>)"
    # speed (saw + 0.5)
    # room 0.1
    # sz (range 0 0.5 perlin)
    # gain 0.9
d2 -- reverb drums
    $ mask "<t!32 f!32>"
    $ every 23 roll
    $ mask "<f!8 t!7>"
    $ every 11 (off (2/8) (hurry 2))
    $ s "as:3(<3 5 2>,8,<2 6>)"
    # speed (sine + 0.5)
    # room 0.3
    # sz (range 0 1 perlin)
    # pan (wchoose [(0,2),(1,8)])
d3 -- reversed hh
    $ every 24 rolll
    $ mask "<f!16 t!17>"
    $ every 13 (off (2/8) (hurry 2))
    $ degradeBy 0.2
    $ s "ah:3(<3 4>,<8 4 16>,<1 5 3 7>)"
    # speed ((sine - 0.5)*2)
    # room 0.2
    # sz (range 0 0.2 perlin)
    # cut 1
    # pan (wchoose [(0,8),(1,2)])
    # gain 0.9
d4 -- bass
    $ mask "<f!4 t!41>"
    $ every 17 (off (3/8) (# speed 0.5))
    $ sometimesBy 0.1 (jux rev)
    $ s "[b:1(3,8)]"
    * up "0 0 <2 3> 0 <7 8 10>"
    # speed (wchoose [(1,16),(2,1)])
    # cut 2
    # shape (range 0.3 0.8 (slow 13 $ sine))
    # gain 0.9
d5 -- light perc
    $ every 26 rolll
    $ mask "<f!32 t!63>"
    $ stut' 4 (3/8*1.5) ((# gain 0.6). (# shape 0.3))
    $ sometimes (hurry 2)
    $ shuffle 4
    $ up "{2 3 7 8 0}%4"
    # s "b:7"
    # speed "{2 4}%3"
    # hpf (range 300 3000 (slow 15 $ sine))
    # pan (range 0 1 (slow 14 $ sine))
d6 -- clap
    $ every 27 roll
    $ sound "~ clap:4"
    # room 0.5
    # sz 0.5
    # gain (range 0 1 (slow 63 $ saw))
    # shape 0.7

-------------------------------
-- 5 - shell in the ghost -----
-------------------------------
d1
  $ whenmod 31 29 (# gain 0)
  $ degradeBy 0.2
  $ every 5 (jux rev)
  $ plyWith "<20 40>" (|* legato 0.9)
  $ n (run 16) # s "percs" # legato "<1 0.5 3>" # speed "[1 2 3]"

d2
  $ whenmod 27 25 (# gain 0)
  $ degradeBy 0.4
  $ every 2 (jux rev)
  $ plyWith "<30 4>" (|* legato 0.9)
  $ n (run 8) # s "bsperc" # legato "<1 5 3>" # speed "[1 2]"

d3
  $ whenmod 11 9 (# gain 0)
  $ degradeBy 0.5
  $ every 3 (jux rev)
  $ plyWith "<30 4 8>" (|* legato 0.9)
  $ n (run 10) # s "bsperc" # legato "<2 0.5 0.3>" # speed "[1 1.5 0.5]"
  # gain 1.2

d4
  $ whenmod 5 3 (# gain 0)
  $ degradeBy 0.1
  $ every 7 (jux rev)
  $ plyWith "<4 8>" (|* legato 0.9)
  $ n (run 16) # s "cpu2" # legato "<0.5 0.3>" # speed "[1 1.5]"
  # gain 1.2

d3
  $ s "ak:8*4"
  # lpf(choose [160, 380, 480, 800])
  # octersubsub 0.8
  # shape 0.6

d1
  $ ply ("<2 3 1>")
  $ struct (binary  "<234 220 120 13>")
  $ s "as" # n (run 20)
  # shape 0.3

d2
  $ sometimes (# speed "-1")
  $ hurry (choose [2, 5, 14])
  $ struct "{1@2 1@3 1@5 1@7}%8"
  $ s "bk" # n (run 8)
  # shape 0.6

d3 silence

d4 silence

d1 silence

d2 silence

----------------
-- 6 - arabian -
----------------
do
    resetCycles
    let pat = stack [s "bk*2 bs/2 bk:3? [~/3 bs:3]", s "bh*1"]
    d5
        $ ((1/8)~>)
        $ stut' 8 (1/8*1.5) ((* gain 0.9).(#pan 0).(# lpf (range 300 900 (slow 10 $ sine))))
        $ pat
        # gain (range 0.3 1 (slow 26 $ sine))
    d6
        $ stut' 6 (1/16) ((* gain 0.8).(# pan 1))
        $ pat
        # gain (range 0.3 1 (slow 12 $ cosine))
    d7
        $ ((3/8)~>)
        $ stut' 8 (1/4*1.5) ((* gain 0.8).(#pan 0.5).(# lpf (range 3000 9000 (slow 20 $ cosine))))
        $ pat
        # gain (range 0.3 1 (slow 8 $ sine))
    d8
        $ ((6/8)~>)
        $ stut' 8 (1/8*1.5) ((* gain 0.9).(* pan 0.5).(# hpf (range 3000 10000 (slow 7 $ saw)) ))
        $ pat
        # gain (range 0.4 1 (slow 9 $ sine))

d1
  $ (|+ up "<0 0 7 0 0 0 0 6 0 0>/8")
  $ every 5 (# cut 1)
  $ off 0.125 (|+| 12)
  $ jux (# sound "arpy") $ slow 4 $ up "a4(3,8) as4(2,6) a4(2,8) a4(<2 3 4>,16)" # s "bass:1"
  # shape 0.6
  # room 0.5 # size 0.6 # lpf (range 200 5000 $ slow 2 $ sine)
  # resonance (range 0.01 0.25 $ slow 3.6 $ cosine)
  # pan (range 0.1 0.9 $ rand)

--------------
-- 7 - zora --
--------------
d1
    $ every 5 (ply "3")
    $ struct (binaryN 12 303)
    $ "[ak:3, ah:6]"
    # speed 1.5
    # attack "0 0.2 0.3"
    # release "0.3 0.9"
    # lpf 300

d2
$ stack [
    slow 4 $ striate' "<5000 4250>" (1/300) $ "808"
        # speed 0.75
        # gain 1,
    s "808:1/2"
        # gain 1.5,
    s "808:2/4"
        # hpf 7000
        # gain 0.9,
       s "cpu:4*16"
        # release 0.03
        # leslie 0.8
        # lsize 0.9
        # pan sine
 # speed 0.7
]

d4  $ every 3 (# begin 0.03692)
    $ every 4 (# begin 0.061)
    $ every 2 (jux rev)
    $ struct (ascii "j <b x>") $ s "ah:4"

d1
    $ off 0.01 (+ 0.985)
    $ stack [
            struct (ascii "d <l n>") $ s "bd:3"
                # speed "0.96 0.96 0.96 0.7"
                # gain 0.9,
    s "~ ifdrums:4 ~ ifdrums:7"
        # speed 0.7
        # room 0.2,
    s "~ cpu2:2 ~ cpu:2"
        # speed 0.8,
    s "~ ~ ~ cp:9"
        # speed 0.8
        # gain 0.8
        # room 0.2
    ] # speed 1.05

d2
    $ off (choose [0.01, 0.05]) (|+| 0.985)
    $ every 4 (stut 3 0.3 "<0.25 0.125>")
    $ every 3 (jux rev)
    $ every 6 (slow 2)
    $ struct "0 0 1 0 0 1 1 0 0 1 0 0 1 0 0 0"
    $ s "rash"
        # n("a3 a4 <ds3 as3> a3 a2 a2")
        # lpf "500 1000 5000 500"
        # release "0.05 0.1 1 0.05 0.2"
        # pan rand
        # gain 1

d3
$ every 2 (jux rev) $ stack [
    every 4 (slow 2) $ struct (binaryN 12 103) $ s "bssnare:3"
        # hpf 300
        # pan rand,
    every 4 (slow 2) $ struct (binaryN 16 137) $ s "bsnoise:1"
        # lpf 2500
        ]
        # cut 1
        # shape 0.1
        # room "0.3 0.8"
        # orbit 3

d4
    $ s "bsnoise:3/4"
        # cut 1
        # shape 0.9
        # lpf 800
        # hpf 300

d1 $ silence

d2 $ silence

d3 $ silence

d4 $ silence

--------------------
-- 7/8 composition -
--------------------

do
    resetCycles
    -- decimated break
    d1
        $ jux (rev)
        $ linger "<0.75 1>"
        $ stut' 2 0.125 (# speed "1 2 3")
        $ loopAt 1
        $ repeatCycles 16
        $ splice 8 (scramble 8 $ run 8)
        $ s "[foo:6]"
        # gain (slow 8 $ range 0 0.7 saw)
    -- bass line
    d2
        $ whenmod 32 24 (juxBy 0.5 ((0.25 ~>) . (# speed "<3 2>")))
        $ juxBy 0.2 ((0.125 ~>) . (# speed "<1 2>"))
        $ up ("0 0 12 0" + (slow 8 $ "0 0 7 10"))
        # s "bass1:3"
        # legato 0.5
        # gain 0.7
        # coarse "4 5 6"
        # lpf (slow 24 $ rangex 200 2000 sine)
    -- stuttering rythm
    d3
        $ rev
        $ stut' 3 (0.125/2) (# speed "1 2 3")
        $ jux (rev . (# speed 1.5))
        $ sometimes (hurry 2)
        $ n "0 2 3 1 0 2 3 0"
        # s "click"
        + gain "{0 1 1 0 0 1 1}%4"
        # gain 0.5
        # lpf (slow 8 $ range 400 8200 saw)
    -- guitar loop
    d4
        $ whenmod 64 48 ( stut' 3 0.125 ((# speed "1 2") . (# gain 0.6)))
        $ whenmod 32 24 (jux (hurry 2 . (# gain 0.8)))
        $ loopAt 4
        $ splice 8 "0 1 2 3 4 5 6 7"
        $ sound "rloop:0"
        # room 0.3
        # gain (range 0 1 (slow 32 $ saw))

------------
-- berlin --
------------
-- kick
d1
    $ every 23 (spin "2")
    $ every 11 (# speed 0.9)
    $ s "bk:5*4"
    # shape 0.3

d2 -- bass
    $ every 11 (jux rev)
    $ every 6 (* speed "1.5")
    $ off (0.5) ((fast 2).(# hpf 300).(#speed 2))
    $ struct ("0 1 1 1 0 0 1 0")
    $ s "sine:8"
    # legato (range 0.4 0.6 (slow 8 $ sine))
    # shape 0.8

d3 -- snare
    $ every 6 (jux (rev))
    $ every 3 (stut' "<4 1 3 2>" (1/8) (# speed "1 1.2 0"))
    $ every 4 (ply "1 1 1 2")
    $ s "[~ as:4]*4"
    # lpf (range 900 1500 (slow 8 $ sine))
    # room "0.1 0 0.2" # orbit 3
    # pan "{0.3 0.7 0.5}%4"
    # shape 0.3
    # octer 0.7
    # room 0.3 # size 0.7 # orbit 3

d4 --arp
    $ stut' 6 (1/8) ((# gain "<0.5 0.6 0.7>") .(# speed 0.99))
    $ every 24 (# speed "2 0.5 4 1 4 8 6 1")
    $ fast 4
    $ every ("<2 3>") (struct ("0 1 1 0"))
    $ s "arpy"
    * up (slow "2" $ "0 7 10 0")
    # lpf (slow 256 $ sine*2000)
    # shape 0.7
    # legato 0.5
    # octer 0.8

-------------
-- albatros -
-------------
do
    resetCycles
    let len = 64 --set duration in cycles
    d1 -- lead melody
        $ every 6 ((# speed 2) . (stut' 4 0.125 (# speed "2 3")))
        $ every 4 (jux (rev . (# speed 2)))
        $ up ("3 ~ 0 [~ 0] ~ 0 <3 7> 0" + 2)
        # s "notes"
        # crush 2
        # lpf (range 800 4000 (slow 16 sine))
        # gain (slow len "0 0 0 1 1 1 1 1")
        # shape 0.8
    d2 --bass
        $ whenmod 16 15 (linger "0.25" . jux (# speed 0.5) . (# cut 0))
        $ slow 1
        $ up ("3!4 0!12" + (slow 4 $ "0 0 0 <7 3 7 [1 ~]>")) # legato 0.5 # s "bass3:5" -- superdirt
        -- $ up ("3!4 0!12" + (slow 4 $ "0 0 0 <7 3 7 [1 ~]>") |- 16) # legato 0.5 # s "brute" --mini brute
        # cut (-1)
        # coarse ("4 8 16" * slow 8 "1 1 1 2")
        # gain (slow len "1 1 1 1 1 1 1 0")
        # octersub (choose[0.1, 0.3, 0.6])
        # shape 0.6
    d3 --hh
        $ chop "<16 32 8 4>"
        $ someCyclesBy 0.1 mute
        $ whenmod 16 15 (# lpf (rangex 6000 600 saw))
        $ whenmod 32 16 (jux (rev))
        $ stut 3 0.1 (0.33/8)
        $ s "[~ ah]*4"
        # gain (slow len "0 1 1 1 1 1 1 1")
        # octer (choose[0.1, 0.3, 0.6])
    d4 --kick
        $ jux (# speed 1.5)
        $ sb 0.1 (# speed (1.1))
        $ whenmod 8 7 (hurry "3 4")
        $ whenmod 16 9 (stut' 2 0.125 (# speed 0.5))
        $ s "[ck:0*4, ck:3]"
        # shape 0.9
        # lpf (range 200 4000 (slow 8 $ sine))
        # gain (slow len "0 0 1 1 1 1 0 1" )


----------
-- mini --
----------
d1
$ stack [
whenmod 16 12 (dg 0.7)
$ every 5 (slow 2)
$ every 3 (ply 2)
$ chop "[1|4|6]"
$ every 8 (off 0.125 (rev))
$ sb 0.1 (|* speed (-1))
$ struct (binaryN 16 "<230 320>") $ s "[ak:3 | ak:4]"
# speed (1 - rand/1.5)
# crush (slow 4 (2 + saw*8))
# cutoff 1200
# gain (stitch (binaryN 8 111) "0.9" "1.1")
# delay 0.125
# lock 1
# delayfeedback 0.2
# orbit 1
# cut 1,
dg 0.1 $ every 8 (ply "2 4") $ s "ak:6*4" # legato 0.2 # gain 0.8 # cut 1 # speed 0.7
]

d2
$ every 6 (ply 4)
$ degradeBy 0.3
$ sb 0.1 (# speed sine)
$ sb 0.3 (jux rev)
$ n "1 <2 [~ 1]> 4 [5 <6 6*2>]"
# s "ah"
# gain 0.6
# delay 0.25
# lock 1
# delayfeedback 0.4
# orbit 2
# cut 2

d3
$ someCyclesBy 0.3 (off 0.5 (|* speed "[0.5 | 0.25]"))
$ dg 0.3
$ (|+ note "<0 [0 12] 7 7 12 0>")
$ note (scale "minor" "<[0 [7 0] ~ 0] [7 [12 <0 [~ 7]>] 0 12]>")
# s "sine"
# n "0"
# cutoff "<180 810>"
# cut 1
# cut 2
# delay (0.5/3)
# lock 1
# delayfeedback 0.4
# orbit 3
# gain 0.7
# pan "{0 1 0.5}%4"

d4 $ s "sine:1" # room 1 # size 0.9 # orbit 4 # gain 0.8 # cutoff (rand * 1000) # end (rand)

d5
$ dg (slow 17 cosine)
$ every 16 (ply "3 4" . (echo 4 0.125 0.125) . (# crush 4) . (# cut 2))
$ every 5 (jux (hurry 3))
$ slow 4
$ stut' 3 0.125 ((# end 0.1) . (# speed 2))
$ spread ($) [linger 0.75, linger 0.5, trunc 0.75]
$ ply "3 1"
$ iter "3"
$ s "808bd"
* speed "1 2 4"
# lpf (rangex 200 8000 $ slow 4 $ sine)
# pan 0.8
# gain 1.2
# cut 1

d6
$ dg (slow 19 sine)
$ every 4 (hurry 2)
$ stut "<1 2 3 4>" 0.125 0.125
$ slow 2
$ jux ((# speed 4) . (0.25 ~>))
$ jux (rev . linger 0.25)
$ every 4 (trunc 0.75)
$ s "bass3:5"
+ up "0 [~ 0] ~ 2 ~ 0 [~ 0] 6"
+ (slow 4 $ up "0 0 0 12 0 0 0 [0 24]")
+ gain ("0.6 0.7 1" * slow 8 "1 1 1 0")
# legato 0.5
# crush 4
# lpf (rangex 1000 10000 $ slow 16 $ saw)
# cut 2

d7
$ dg (slow 32 sine)
$ someCyclesBy 0.2 (iter 16)
$ every 8 (ply "2 3" . (stut 1 (0.125*3) 0.125) . (# amp 0.8) . (# cut 1))
$ s "808bd:2!3 808bd:3"
# gain 1.2
# cut 1

d8
$ dg (slow 37 cosine)
$ sb 0.4 (iter 8)
$ every 9 rolll
$ jux (rev . (# gain 0.5))
$ fast 4
$ n "0 8 0 6 <8 6>"
# s "~ hh"
+ speed "1 1.1"
# end rand
# cut 2

d1 $ silence

d4 $ silence

d2 $ silence

d3 $ silence

hush

-------------
-- newyear --
-------------

do
  -- mixing automation
    let mix1 = mask "<t!64 f!64>"
        mix2 = mask "<f!8 t!64 f!64>"
        mix3 = mask "<f!16 t!64 f!64>"
        mix4 = mask "<f!32 t!64 f!64>"
        mix5 = mask "<f!40 t!64 f!64>"
  ------------------------------------
    resetCycles
    setcps (130/60/4)
    d1
      $ dg 0.1
      $ sometimesBy 0.1 (# speed (-1))
      $ mix1
      $ stut' 4 0.125 (# speed "1 2 3")
      $ fast 2
      $ s "808:4(3,8,<1 2 3>)"
      # lpf (range 5000 100 saw)
      # nudge "[0 0.03]*4"
      # room "0 0 0 0.7"
      # orbit 1
    d2
      $ mix2
      $ sometimesBy 0.05 ((# room 1).(# orbit 2))
      $ whenmod 64 33 (# speed 3)
      $ every 2 (juxBy 0.3 (rev . (# speed "2")))
      $ s "ak(4,<8>)"
      # hpf (range "<2000 1000>" 100 saw)
      # nudge "[0 0.03]*4"
      # room 0.1
      # orbit 2
      # gain 0.9
    d3
      $ mix3
      $ stut' 4 0.125 ((# speed "1 2") . (# gain (range 0 0.9 (slow 64 $ saw))))
      $ every 32 (const $ s "")
      $ every 12 (linger "<0.25>")
      $ every 8 (linger 0.5)
      $ juxBy 0.1 ((# speed 0.5) . (# legato 0.75))
      $ up ("0 . ~ 12 . ~  . 7" |+ slow 16 "0 0 1 1 0 0 1 1 0 0 -2 -2 0 0 -2 -2 0 -2 0 -2" - 3)
      -- $ up ("~ . 4 . ~ . <7 0> . 0 . ~ 0 . <0 12> . ~ 0" + slow 4 "0 . 7 0 . 3 <3 0> . 10")
      # legato 0.25
      # s "[op:9, bd]"
      # lpf (slow 32 $ sine*5000+1000)
      # nudge "[0 0.03]*4"
    d4
      $ mix4
      $ whenmod 64 33 (# gain 0.85)
      $ every 12 (linger "<0.25>")
      $ every 8 (linger 0.5)
      $ loopAt 4
      $ every 16 rev
      $ chop 64
      $ s "drummer:1"
      # gain 0
      # cut 1
    d5
      $ mix5
      $ s "hh*16"
      # cutoff (range 200 1000 $ slow 8 $ sine)
      # resonance (range 0 0.5 $ slow 12 $ sine)
      # pan "0.2 0.8"
      # gain (range 0 1 $ slow 9 $ sine)
